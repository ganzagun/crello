{"version":3,"sources":["utils/storeApi.js","components/List/Title.js","components/Card.js","components/Input/InputCard.js","components/Input/InputContainer.js","components/List/List.js","utils/store.js","App.js","reportWebVitals.js","index.js"],"names":["React","createContext","useStyle","makeStyles","theme","editableTitleContainer","margin","spacing","display","editableTitle","flexGrow","fontSize","fontWeight","input","background","Title","title","listId","useState","open","setOpen","newTitle","setNewTitle","updateListTitle","useContext","storeApi","classes","InputBase","onChange","e","target","value","autoFocus","inputProps","className","fullWidth","onBlur","Typography","onClick","card","padding","Card","index","draggableId","id","provided","ref","innerRef","dragHandleProps","draggableProps","Paper","width","paddingBottom","btnConfirm","color","fade","confirm","InputCard","type","addMoreCard","addMoreList","setTitle","multiline","placeholder","Button","IconButton","root","marginTop","addCard","backgroundColor","InputContainer","Collapse","in","elevation","minWidth","marginLeft","cardContainer","List","list","CssBaseline","droppableId","droppableProps","cards","map","data","lists","listIds","minHeight","overflowY","listContainer","App","store","setData","Provider","console","log","newCard","uuid","newState","newListId","newList","onDragEnd","result","destination","source","newListIds","splice","sourceList","destinationList","draggingCard","filter","newSate","direction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5424203.chunk.js","sourcesContent":["import React from 'react';\r\nexport default React.createContext(null);","import React, { useState, useContext } from 'react';\r\nimport { Typography, InputBase } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport storeApi from '../../utils/storeApi';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    editableTitleContainer: {\r\n        margin: theme.spacing(1),\r\n        display: 'flex',\r\n    },\r\n    editableTitle: {\r\n        flexGrow: 1,\r\n        fontSize: '1.2rem',\r\n        fontWeight: 'bold',\r\n    },\r\n    input: {\r\n        fontSize: '1.2rem',\r\n        fontWeight: 'bold',\r\n        margin: theme.spacing(1),\r\n        '&:focus': {\r\n            background: '#ddd',\r\n        },\r\n    },\r\n}));\r\nexport default function Title({ title, listId }) {\r\n    const [open, setOpen] = useState(false);\r\n    const [newTitle, setNewTitle] = useState(title);\r\n    const { updateListTitle } = useContext(storeApi);\r\n    const classes = useStyle();\r\n    const handleOnChange = (e) => {\r\n        setNewTitle(e.target.value);\r\n    };\r\n\r\n    const handleOnBlur = () => {\r\n        updateListTitle(newTitle, listId);\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <div>\r\n            {open ? (\r\n                <div>\r\n                    <InputBase\r\n                        onChange={handleOnChange}\r\n                        autoFocus\r\n                        value={newTitle}\r\n                        inputProps={{\r\n                            className: classes.input,\r\n                        }}\r\n                        fullWidth\r\n                        onBlur={handleOnBlur}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div className={classes.editableTitleContainer}>\r\n                    <Typography\r\n                        onClick={() => setOpen(!open)}\r\n                        className={classes.editableTitle}\r\n                    >\r\n                        {title}\r\n                    </Typography>\r\n                    <MoreHorizIcon />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    card: {\r\n        padding: theme.spacing(1, 1, 1, 2),\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\nexport default function Card({ card, index }) {\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <Draggable draggableId={card.id} index={index}>\r\n            {(provided) => (\r\n                <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.dragHandleProps}\r\n                    {...provided.draggableProps}\r\n                >\r\n                    <Paper className={classes.card}>{card.title}</Paper>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    );\r\n}","import React, { useState, useContext } from 'react';\r\nimport { Paper, InputBase, Button, IconButton } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\nimport storeApi from '../../utils/storeApi';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    card: {\r\n        width: '280px',\r\n        margin: theme.spacing(0, 1, 1, 1),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    btnConfirm: {\r\n        background: '#5AAC44',\r\n        color: '#fff',\r\n        '&:hover': {\r\n            background: fade('#5AAC44', 0.75),\r\n        },\r\n    },\r\n    confirm: {\r\n        margin: theme.spacing(0, 1, 1, 1),\r\n    },\r\n}));\r\nexport default function InputCard({ setOpen, listId, type }) {\r\n    const classes = useStyle();\r\n    const { addMoreCard, addMoreList } = useContext(storeApi);\r\n    const [title, setTitle] = useState('');\r\n\r\n    const handleOnChange = (e) => {\r\n        setTitle(e.target.value);\r\n    };\r\n    const handleBtnConfirm = () => {\r\n        if (type === 'card') {\r\n            addMoreCard(title, listId);\r\n            setTitle('');\r\n            setOpen(false);\r\n        } else {\r\n            addMoreList(title);\r\n            setTitle('');\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Paper className={classes.card}>\r\n                    <InputBase\r\n                        onChange={handleOnChange}\r\n                        multiline\r\n                        onBlur={() => setOpen(false)}\r\n                        fullWidth\r\n                        inputProps={{\r\n                            className: classes.input,\r\n                        }}\r\n                        value={title}\r\n                        placeholder={\r\n                            type === 'card'\r\n                                ? 'Enter a title of this card..'\r\n                                : 'Enter list title...'\r\n                        }\r\n                    />\r\n                </Paper>\r\n            </div>\r\n            <div className={classes.confirm}>\r\n                <Button className={classes.btnConfirm} onClick={handleBtnConfirm}>\r\n                    {type === 'card' ? 'Add Card' : 'Add List'}\r\n                </Button>\r\n                <IconButton onClick={() => setOpen(false)}>\r\n                    <ClearIcon />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Paper, Typography, Collapse } from '@material-ui/core';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\nimport InputCard from './InputCard';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        width: '300px',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    addCard: {\r\n        padding: theme.spacing(1, 1, 1, 2),\r\n        margin: theme.spacing(0, 1, 1, 1),\r\n        background: '#EBECF0',\r\n        '&:hover': {\r\n            backgroundColor: fade('#000', 0.25),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function InputContainer({ listId, type }) {\r\n    const classes = useStyle();\r\n    const [open, setOpen] = useState(false);\r\n    return (\r\n        <div className={classes.root}>\r\n            <Collapse in={open}>\r\n                <InputCard setOpen={setOpen} listId={listId} type={type} />\r\n            </Collapse>\r\n            <Collapse in={!open}>\r\n                <Paper\r\n                    className={classes.addCard}\r\n                    elevation={0}\r\n                    onClick={() => setOpen(!open)}\r\n                >\r\n                    <Typography>\r\n                        {type === 'card' ? '+ Add a Card' : '+ Add another List'}\r\n                    </Typography>\r\n                </Paper>\r\n            </Collapse>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Paper, Typography, CssBaseline } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Title from './Title';\r\nimport Card from '../Card';\r\nimport InputContainer from '../Input/InputContainer';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: '300px',\r\n        backgroundColor: '#EBECF0',\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    cardContainer: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n}));\r\nexport default function List({ list, index }) {\r\n    const classes = useStyle();\r\n    return (\r\n        <Draggable draggableId={list.id} index={index}>\r\n            {(provided) => (\r\n                <div {...provided.draggableProps} ref={provided.innerRef}>\r\n                    <Paper className={classes.root} {...provided.dragHandleProps}>\r\n                        <CssBaseline />\r\n                        <Title title={list.title} listId={list.id} />\r\n                        <Droppable droppableId={list.id}>\r\n                            {(provided) => (\r\n                                <div\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                    className={classes.cardContainer}\r\n                                >\r\n                                    {list.cards.map((card, index) => (\r\n                                        <Card key={card.id} card={card} index={index} />\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n\r\n                        <InputContainer listId={list.id} type=\"card\" />\r\n                    </Paper>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    );\r\n}","const cards = [\r\n    {\r\n        id: 'card-1',\r\n        title: 'card-1',\r\n    },\r\n\r\n];\r\n\r\nconst data = {\r\n    lists: {\r\n        'list-1': {\r\n            id: 'list-1',\r\n            title: 'Todo',\r\n            cards,\r\n        },\r\n        'list-2': {\r\n            id: 'list-2',\r\n            title: 'Doing',\r\n            cards: [],\r\n        },\r\n    },\r\n    listIds: ['list-1', 'list-2'],\r\n};\r\n\r\nexport default data;","import React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport List from './components/List/List';\nimport store from './utils/store';\nimport StoreApi from './utils/storeApi';\nimport InputContainer from './components/Input/InputContainer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    minHeight: '100vh',\n    background: 'green',\n    width: '100%',\n    overflowY: 'auto',\n  },\n  listContainer: {\n    display: 'flex',\n  },\n}));\n\nexport default function App() {\n  const [data, setData] = useState(store);\n  const [open, setOpen] = useState(false);\n\n  const [backgroundUrl, setBackgroundUrl] = useState('');\n  const classes = useStyle();\n  const addMoreCard = (title, listId) => {\n    console.log(title, listId);\n\n    const newCardId = uuid();\n    const newCard = {\n      id: newCardId,\n      title,\n    };\n\n    const list = data.lists[listId];\n    list.cards = [...list.cards, newCard];\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n\n  const addMoreList = (title) => {\n    const newListId = uuid();\n    const newList = {\n      id: newListId,\n      title,\n      cards: [],\n    };\n    const newState = {\n      listIds: [...data.listIds, newListId],\n      lists: {\n        ...data.lists,\n        [newListId]: newList,\n      },\n    };\n    setData(newState);\n  };\n\n  const updateListTitle = (title, listId) => {\n    const list = data.lists[listId];\n    list.title = title;\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n    console.log('destination', destination, 'source', source, draggableId);\n\n    if (!destination) {\n      return;\n    }\n    if (type === 'list') {\n      const newListIds = data.listIds;\n      newListIds.splice(source.index, 1);\n      newListIds.splice(destination.index, 0, draggableId);\n      return;\n    }\n\n    const sourceList = data.lists[source.droppableId];\n    const destinationList = data.lists[destination.droppableId];\n    const draggingCard = sourceList.cards.filter(\n      (card) => card.id === draggableId\n    )[0];\n\n    if (source.droppableId === destination.droppableId) {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n      const newSate = {\n        ...data,\n        lists: {\n          ...data.lists,\n          [sourceList.id]: destinationList,\n        },\n      };\n      setData(newSate);\n    } else {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n\n      const newState = {\n        ...data,\n        lists: {\n          ...data.lists,\n          [sourceList.id]: sourceList,\n          [destinationList.id]: destinationList,\n        },\n      };\n      setData(newState);\n    }\n  };\n\n  return (\n    <StoreApi.Provider value={{ addMoreCard, addMoreList, updateListTitle }}>\n      <div\n        className={classes.root}\n      >\n\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"app\" type=\"list\" direction=\"horizontal\">\n            {(provided) => (\n              <div\n                className={classes.listContainer}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {data.listIds.map((listId, index) => {\n                  const list = data.lists[listId];\n                  return <List list={list} key={listId} index={index} />;\n                })}\n                <InputContainer type=\"list\" />\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    </StoreApi.Provider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}